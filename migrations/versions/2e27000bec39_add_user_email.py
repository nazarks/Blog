"""add user email

Revision ID: 2e27000bec39
Revises: b117a1b166a8
Create Date: 2022-12-28 17:34:34.516165

"""
import sqlalchemy as sa
from alembic import op
from werkzeug.security import generate_password_hash

from blog.models import User

# revision identifiers, used by Alembic.
revision = "2e27000bec39"
down_revision = "b117a1b166a8"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.add_column(sa.Column("email", sa.String(length=255), nullable=False))
        batch_op.create_unique_constraint(None, ["email"])

    create_init_admin()
    create_init_users()
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="unique")
        batch_op.drop_column("email")

    # ### end Alembic commands ###


def create_init_admin():
    op.bulk_insert(
        User.__table__,
        [
            {
                "username": "admin",
                "email": "admin@site.com",
                "is_staff": True,
                "password": generate_password_hash("test123"),
            },
        ],
    )
    print("admin is created")


def create_init_users():
    op.bulk_insert(
        User.__table__,
        [
            {
                "username": "James",
                "email": "ajames@site.com",
                "is_staff": False,
                "password": generate_password_hash("test123"),
            },
            {
                "username": "Nik",
                "email": "nik@site.co",
                "is_staff": False,
                "password": generate_password_hash("test123"),
            },
        ],
    )
    print("users James, Nik is created")
